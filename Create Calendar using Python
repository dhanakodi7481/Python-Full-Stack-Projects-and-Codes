from calendar import TextCalendar

year = int(input('Enter Year: '))
cal = TextCalendar()
print(cal.formatyear(year, 2, 1, 8, 3))

Sample Output:
Enter Year: 2024

                            2024

      January               February               March
Mo Tu We Th Fr Sa Su  Mo Tu We Th Fr Sa Su  Mo Tu We Th Fr Sa Su
 1  2  3  4  5  6  7           1  2  3  4               1  2  3
 8  9 10 11 12 13 14   5  6  7  8  9 10 11   4  5  6  7  8  9 10
15 16 17 18 19 20 21  12 13 14 15 16 17 18  11 12 13 14 15 16 17
22 23 24 25 26 27 28  19 20 21 22 23 24 25  18 19 20 21 22 23 24
29 30 31              26 27 28 29          25 26 27 28 29 30 31


Explanation : 

Code Explanation
Importing the TextCalendar class: 

 => The calendar module provides classes and methods for working with calendars.
TextCalendar is a class in the calendar module that generates calendar outputs in a plain text format.

Taking year input:
 => Prompts the user to input a year (e.g., 2024).
 => Converts the input to an integer.

Creating a TextCalendar object:
 => Creates an instance of the TextCalendar class. By default, it uses Monday as the first day of the week.

Generating a year-long calendar:
 => Calls the formatyear method of the TextCalendar object to generate a calendar for the entire year.
 => The output is formatted as plain text, and the formatyear method takes several parameters for customizing the layout:
    Parameters of formatyear

year:
Specifies the year for which the calendar will be generated.

width:
    => The width of each date column (in characters).
2 ensures enough space for single- and double-digit dates.

spacing:
   => The number of spaces between months within the same row.
1 adds minimal spacing between months.

vertical_spacing:
   => The number of blank lines between rows of months.
8 creates clear separation between rows of months.

horizontal_spacing:
   => The number of months to display per row.
   => 3 places three months side by side in each row.

How It Works
 => The formatyear method organizes months into rows, with each row containing 3 months (as specified by the horizontal_spacing parameter).
 => Each month displays days of the week and dates, formatted in columns defined by the width parameter.
 => Spaces between months (spacing) and rows of months (vertical_spacing) help improve readability.


